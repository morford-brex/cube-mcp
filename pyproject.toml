[project]
name = "mcp_cube_server"
version = "0.0.2"
description = "MCP server for interfacing with Cube.dev REST API"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.2.1",
    "pandas",
    "pyjwt>=2.10.1",
    "python-dotenv",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = ["pyright>=1.1.389"]

[project.scripts]
mcp_cube_server = "mcp_cube_server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_cube_server"]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "responses>=0.25.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "types-requests",
    "types-pyyaml",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--cov=mcp_cube_server",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.coverage.run]
source = ["src/mcp_cube_server"]
omit = ["tests/*", "src/mcp_cube_server/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 100
target-version = "py311"
fix = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = ["mcp.*", "pandas.*", "jwt.*"]
ignore_missing_imports = true